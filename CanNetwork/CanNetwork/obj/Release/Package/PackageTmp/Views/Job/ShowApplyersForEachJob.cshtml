@model IEnumerable<CanNetwork.Models.JobViewModel>
@using CanNetwork.Models
@using GridMvc.Html
@using CanNetwork.Context

@{
    MyDbContext db = new MyDbContext();
    ViewBag.Title = "Show Applicants For Each Job";
}

<h2 class="text-primary mb-3">Applicants For Each Job</h2>

<hr />

@if (Model.Count() == 0)
{
    <div class="alert alert-danger">No Applicants Yet!</div>
}
else
{

    <div style="width: 100%">
        @Html.Grid(Model).Columns(columns =>
        {
           columns.Add(o => o.JobTitle)
           .Titled("Job Title")
           .Filterable(true)
           .Sortable(true);

           columns.Add()
           .Titled("Num. of Applicants")
           .Encoded(false)
           .Sanitized(false)
           .RenderValueAs(o => @<b>[ @db.ApplyedJobs.Where(aj => aj.Job.JobTitle == o.JobTitle).Count() ]</b>)
           .Sortable(true)
           .Css("text-center");

           columns.Add()
           .Titled("Actions")
           .Encoded(false)
           .Sanitized(false)
           .RenderValueAs(o => @Html.ActionLink("View Details", "JobApplyersDetails", new { jobTitle = o.JobTitle }, new { @class = "btn btn-primary" }))
           .Sortable(true)
           .Css("text-center");

         }).WithPaging(4).Sortable(true)
    </div>

}